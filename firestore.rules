/**
 * @fileoverview Firestore Security Rules for the Inox PriceCalc application.
 *
 * Core Philosophy:
 * This ruleset provides open read access to item catalogs and settings,
 * assuming no user-specific private data is stored. Write access to
 * `scale_data` is denied at the rules level, presuming it is handled by a
 * trusted source.
 *
 * Data Structure:
 * - /inox_item_categories/{inoxItemCategoryId}: Stores item categories.
 * - /inox_items/{inoxItemId}: Stores specific stainless steel items.
 * - /universal_settings/{universalSettingsId}: Stores universal settings.
 * - /scale_data/{scaleDataId}: Stores data from the live scale.
 *
 * Key Security Decisions:
 * - Public read access is granted for all item catalogs and settings.
 * - Write access to `scale_data` is denied at the rules level,
 *   recommending a trusted backend for data entry.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to inox item categories.
     * @path /inox_item_categories/{inoxItemCategoryId}
     * @allow (get, list) Any unauthenticated user can read item categories.
     * @deny (create, update, delete) No user can create, update, or delete item categories directly.
     * @principle Grants public read access to all item categories and restricts write access.
     */
    match /inox_item_categories/{inoxItemCategoryId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to inox items.
     * @path /inox_items/{inoxItemId}
     * @allow (get, list) Any unauthenticated user can read inox items.
     * @deny (create, update, delete) No user can create, update, or delete inox items directly.
     * @principle Grants public read access to all items and restricts write access.
     */
    match /inox_items/{inoxItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows public read access to universal settings.
     * @path /universal_settings/{universalSettingsId}
     * @allow (get, list) Any unauthenticated user can read universal settings.
     * @deny (create, update, delete) No user can create, update, or delete universal settings directly.
     * @principle Grants public read access to universal settings and restricts write access.
     */
    match /universal_settings/{universalSettingsId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Denies all direct access to scale data. Data should be written by a trusted source.
     * @path /scale_data/{scaleDataId}
     * @allow None. Data writes should be managed by a trusted backend.
     * @deny (get, list, create, update, delete) All operations are denied.
     * @principle Restricts all direct access to scale data, expecting a trusted backend service to manage it.
     */
    match /scale_data/{scaleDataId} {
      allow get, list, create, update, delete: if false;
    }
  }
}